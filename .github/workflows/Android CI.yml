name: Android CI

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Keystore File
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" > keystore.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSWORD_GPG }}" --batch keystore.jks.asc > keystore.jks
      
      - name: Build with Gradle
        run: |
          ./gradlew assemble --stacktrace
          apk_dir=app
          apk_files=$(find $apk_dir -name "*.apk")
          if [ -z "$apk_files" ]; then
            echo "No APK files found in $apk_dir"
          else
            echo "APK files found in $apk_dir:"
            echo "$apk_files"
          fi
          
          apk_file=$(basename $(find "app" -name "*.apk"))
          apk_name="${apk_file//unsigned/signed}"
          echo "app_name=$apk_name" >> $GITHUB_ENV
          
          path=/usr/local/lib/android/sdk/build-tools/32.0.0
          $path/zipalign -v -p 4 app/build/outputs/apk/release/*.apk app/build/outputs/apk/release/aligned.apk
          $path/apksigner sign --ks keystore.jks --ks-key-alias ${{ secrets.KEYSTORE_ALIAS_NAME }} --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --key-pass pass:${{ secrets.KEYSTORE_PASSWORD_ALIAS }} --out app/build/outputs/apk/release/"$apk_name" app/build/outputs/apk/release/aligned.apk
          $path/apksigner verify app/build/outputs/apk/release/"$apk_name"

          apk_dir=app
          apk_files=$(find $apk_dir -name "*.apk")
          if [ -z "$apk_files" ]; then
            echo "No APK files found in $apk_dir"
          else
            echo "APK files found in $apk_dir:"
            echo "$apk_files"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/${{ env.app_name }}
          retention-days: 2

      - name: Release
        uses: r0user/release-apk@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          APP_FOLDER: app
